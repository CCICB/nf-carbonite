params {
    config_profile_description = 'NCI Gadi HPC profile provided by nf-core/configs'
    config_profile_contact = 'Georgie Samaha (@georgiesamaha), Matthew Downton (@mattdton)'
    config_profile_url = 'https://opus.nci.org.au/display/Help/Gadi+User+Guide'
}

// Enable use of Singularity to run containers
singularity {
    enabled = true
    autoMounts = true
}
 
// Submit up to 300 concurrent jobs (Gadi exec max)
// pollInterval and queueStatInterval of every 5 minutes
// submitRateLimit of 20 per minute
executor {
    queueSize = 300
    pollInterval = '5 min'
    queueStatInterval = '5 min'
    submitRateLimit = '20 min'
}
 
process {
    //  gadi specific configs
    executor = 'pbspro'
    project = '<project_id>'
    stageInMode = 'symlink'
    clusterOptions = { "-l storage=gdata/<project_id>,ncpus=${task.cpus},mem=${task.memory.toGiga()}G,jobfs=100GB" }
    resourceLimits = [ cpus: 64, memory: 512.GB, time: 72.h ]
    storage = 'gdata/<project_id>+scratch/<project_id>'
    module = 'singularity'
    cache = 'lenient'
    stageInMode = 'symlink'
    beforeScript = 'module load singularity'
    queue = { task.memory < 128.GB ? 'normal' : (task.memory >= 128.GB && task.memory <= 190.GB ? 'normal' : (task.memory > 190.GB && task.memory <= 1020.GB ? 'hugemembw' : '')) }

    // error strat
    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries = 3
    beforeScript = 'module load singularity;SINGULARITY_CACHEDIR=/g/data/<project_id>/singularity;'

    withName: RNAINDEL {
        container = {"${ workflow.containerEngine == 'singularity' ?
        'rnaindel_3.3.3.sif' :
        'pgc-images.sbgenomics.com/angela/rnaindel:3.3.3' }"}
        cpus = 8
        memory =  { 64.GB * task.attempt }
        time = 6.h
    }
}  

// Write custom trace file with outputs required for SU calculation
def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
trace {
    enabled = true
    overwrite = false
    file = "./gadi-trace-${trace_timestamp}.txt"
    fields = 'name,status,exit,duration,realtime,cpus,%cpu,memory,%mem,rss'
}
 